q()
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = playlist_genre, y = track_popularit)) +
geom_smooth(mapping = aes(x = playlist_genre, y = track_popularity))
slr_model <- lm(track_popularity ~ danceability, data = clean_songs)
setwd('C:/Users/there/OneDrive/Desktop/Phase1')
songs <- read.csv("spotify_songs.csv", header =TRUE)
#Repetitive entries removal
clean_songs <-songs[!duplicated(songs[c("track_name", "track_artist")]), ]
na.omit(songs)
#Repetitive entries removal
clean_songs <-songs[!duplicated(songs[c("track_name", "track_artist")]), ]
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = playlist_genre, y = track_popularit)) +
geom_smooth(mapping = aes(x = playlist_genre, y = track_popularity))
library(tidyverse)
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = playlist_genre, y = track_popularit)) +
geom_smooth(mapping = aes(x = playlist_genre, y = track_popularity))
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = playlist_genre, y = track_popularity)) +
geom_smooth(mapping = aes(x = playlist_genre, y = track_popularity))
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = playlist_genre, y = track_popularity))
#Tempo
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = tempo, y = track_popularity, color=playlist_genre)) +
geom_smooth(mapping = aes(x = tempo, y = track_popularity))
pairs(~tempo + danceability + valence + energy, clean_songs)
correlation_matrix <- cor(df[c("track_popularity", "danceability", "energy", "valence", "tempo")])
library(corrplot)
correlation_matrix <- cor(clean_songs[c("track_popularity", "danceability", "energy", "valence", "tempo")])
corrplot(correlation_matrix, method = "color")
correlation_matrix
cor.test(clean_songs$danceability, clean_songs$track_popularity)
cor.test(clean_songs$energy, clean_songs$track_popularity)
cor.test(clean_songs$valence, clean_songs$track_popularity)
cor.test(clean_songs$valence, clean_songs$danceability)
cor.test(clean_songs$danceability, clean_songs$track_popularity)
correlation_matrix
correlation_matrix
slr_model <- lm(track_popularity ~ danceability, data = clean_songs)
summary(slr_model)
mlr_model <- lm (track_popularity ~ danceability + energy + valence, data= clean_songs)
summary(mlr_model)
tinytex::install_tinytex()
install.packages('plyr', repos = "http://cran.us.r-project.org")
#visualizing the count of songs in each level of popularity
ggplot(clean_songs, aes(x = track_popularity)) +
geom_histogram(binwidth = 1, fill = "blue", color = "black")
#Danceability vs. popularity
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = danceability, y = track_popularity, color=playlist_genre)) +
geom_smooth(mapping = aes(x = danceability, y = track_popularity))
ggplot(data = clean_songs, mapping = aes(x = danceability, y = track_popularity, fill=playlist_genre)) +
geom_boxplot()
#Energy vs popularity
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = energy, y = track_popularity, color=playlist_genre)) +
geom_smooth(mapping = aes(x = energy, y = track_popularity))
#Valence vs popularity
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = valence, y = track_popularity, color=playlist_genre)) +
geom_smooth(mapping = aes(x = valence, y = track_popularity))
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = valence, y = danceability)) +
geom_smooth(mapping = aes(x = valence, y = danceability))
#Tempo popularity
ggplot(data = clean_songs) +
geom_point(mapping = aes(x = tempo, y = track_popularity, color=playlist_genre)) +
geom_smooth(mapping = aes(x = tempo, y = track_popularity))
correlation_matrix <- cor(clean_songs[c("track_popularity", "danceability", "energy", "valence", "tempo")])
corrplot(correlation_matrix, method = "color")
